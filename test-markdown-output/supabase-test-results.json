{
  "timestamp": "2025-10-10T21:02:04.364Z",
  "testAnalysisId": "test-analysis-1760130123681",
  "summary": {
    "total": 11,
    "passed": 4,
    "failed": 6,
    "warned": 1,
    "successRate": "36.4%"
  },
  "steps": [
    {
      "step": "Check Tables",
      "status": "WARN",
      "message": "Tables missing"
    },
    {
      "step": "Generate Phase 1",
      "status": "PASS",
      "count": 2
    },
    {
      "step": "Generate Phase 2",
      "status": "PASS",
      "count": 4
    },
    {
      "step": "Generate Phase 3",
      "status": "PASS",
      "count": 1
    },
    {
      "step": "Save to Supabase",
      "status": "FAIL",
      "error": "PrismaClientInitializationError: \nInvalid `prisma.$executeRaw()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\n 7 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1"
    },
    {
      "step": "Retrieve from Supabase",
      "status": "FAIL",
      "error": "PrismaClientInitializationError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\n 7 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1"
    },
    {
      "step": "Generate Combined",
      "status": "FAIL",
      "error": "TypeError: Cannot read properties of undefined (reading 'length')"
    },
    {
      "step": "Save Export",
      "status": "FAIL",
      "error": "PrismaClientInitializationError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\n 7 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1"
    },
    {
      "step": "Retrieve Export",
      "status": "FAIL",
      "error": "PrismaClientInitializationError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\n 7 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1"
    },
    {
      "step": "Get Statistics",
      "status": "PASS",
      "stats": {
        "total": 0,
        "phase1": 0,
        "phase2": 0,
        "phase3": 0
      }
    },
    {
      "step": "Get Complete JSON",
      "status": "FAIL",
      "error": "PrismaClientInitializationError: \nInvalid `prisma.$queryRaw()` invocation:\n\n\nerror: Environment variable not found: DATABASE_URL.\n  -->  schema.prisma:7\n   | \n 6 |   provider = \"postgresql\"\n 7 |   url      = env(\"DATABASE_URL\")\n   | \n\nValidation Error Count: 1"
    }
  ]
}